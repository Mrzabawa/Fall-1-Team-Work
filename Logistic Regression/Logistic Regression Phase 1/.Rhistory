}
num <- 1:n
final <- data.frame(cbind(num, converge))
ggplot(final, aes(y = converge,x =num))+
geom_line()
sumnumbers
test <- runif(100)
mean(test)
mean(test[test > .1])
test[test > .1]
mean(test[test > .1])/.1
test[test > .1]/100
sum(test > .1) / 100
mean(test[test > .1])
mean(test[test > .1])/.1
test[test > .1]
mean(test[test > .2])/.1
sum(test > .2) / 100
sum(test > .5) / 100
mean(test[test > .5])/.1
mean(test[test > .5])/.5
mean(test)
mean(test[test >= .5])
mean(test)
mean(test[test >= .5])
t = .5
A <- runif(100)
B <- A[A >= t]
mean(A)
mean(B)
mean(A)/t
t = .6
A <- runif(1000)
t = .6
B <- A[A >= t]
mean(A)
mean(B)
mean(A)/t
?cdf
??cdf
A <- rnorm(1000)
t = .6
B <- A[A >= t]
mean(A)
mean(B)
#P(X >= t) <= mean(A)/t
mean(A)/t
#P(X >= t)
length(B)
#P(X >= t)
length(B)/1000
#P(X >= t)
1 - (length(B)/1000)
?prob
??prob
?pnorm
#P(X >= t)
pnorm(t)
#P(X >= t)
1 - (length(B)/1000)
pnorm(t)
t = .4
B <- A[A >= t]
mean(A)
mean(B)
#P(X >= t) <= mean(A)/t
mean(A)/t
#P(X >= t)
1 - (length(B)/1000)
pnorm(t)
##Markov inequality????
A <- abs(rnorm(1000))
t = .4
B <- A[A >= t]
mean(A)
mean(B)
##Markov inequality????
A <- abs(runif(1000))
t = .4
B <- A[A >= t]
mean(A)
mean(B)
install.packages("extReams")
install.packages("extRemes")
library("extRemes")
Zmax <- matrix(rnorm(100*1000), 1000,100)
dim(Zmax)
Zmax< apply(Zmax, 2, max)
Zmax<- apply(Zmax, 2, max)
length(Zmax)
plot(Zmax, typr = "h", col = "darkblue")
plot(Zmax, type = "h", col = "darkblue")
hist(Zmax, col = "darkblue")
fit<-fevd(Zmax)
fit
plot(fit)
ci(fit, type = "parameter")
distill(fit)
Zmax
qqplot(Zmax)
?qqplot
qqnorm(Zmax)
dim(Zmax)
fit
distill(fit)
strip(fit)
data("SEPTsp")
summary(SEPTsp)
?SEPTsp
plot(TMX1~Year, data = SEPTsp, type = "h", col = "darkblue")
plot(SEPTsp$TMX1~SEPTsp$Year, type = "h", col = "darkblue")
lm(TMX1~Year, data = SEPTsp)
lmod <- lm(TMX1~1 + Year, data = SEPTsp)
summary(lmod)
-0.008742/0.033931
pairs(SEPTsp)
fit<-fevd(Zmax, type = "Gumbel")
fit0.1<-fevd(Zmax, type = "Gumbel")
lntest(fit0.1)
lrtest(fit0.1)
lr.test(fit0.1)
fit<-fevd(Zmax)
fit0.1<-fevd(Zmax, type = "Gumbel")
lr.test(fit0.1, fit)
args(lr.test)
?lf.test
??lr.test
?lr.test
?htest
??htest
?h.test
args(htest)
lr.test(fit0.1, fit, alternative = "twosided")
lr.test(fit0.1, fit, alternative = "two-sided")
fit0<- fevd(data = SEPTsp, units = "deg C")
fit1<- fevd(TMAX1, data = SEPTsp, units = "deg C")
fit1<- fevd(TMAX1, data = SEPTsp, units = "deg C")
View(SEPTsp)
fit1<- fevd(TMX1 , data = SEPTsp, units = "deg C")
fit0<- fevd(TMX1 ,data = SEPTsp, units = "deg C")
fit1<- fevd(TMX1 , data = SEPTsp, units = "deg C", location.fun = ~AOindex)
lr.test(fit0, fit1)
fit0=fevd(-TMN0~,data=SEPTsp,units="neg. deg. C")
fit0
plot(fit0)
library(ggplot2)
n = 10000
count = 0
sumnumbers <- numeric(n+1)
converge <- numeric(n)
for(i in seq(n)){
x <- runif(1)
y <- runif(1)
sumnumbers[i+1] = sumnumbers[i] + (y <= x)
converge[i] = sumnumbers[i+1] / n
}
num <- 1:n
final <- data.frame(cbind(num, converge))
ggplot(final, aes(y = converge,x =num))+
geom_line()
##Markov inequality????
A <- abs(runif(1000))
t = .4
B <- A[A >= t]
mean(A)
mean(B)
#P(X >= t) <= mean(A)/t
mean(A)/t
#P(X >= t)
1 - (length(B)/1000)
pnorm(t)
system("""osascript -e 'beep 5'""")
system(osascript -e 'beep 5')
?system
system("osascript -e 'beep 5'")
text = "your Code is done"
system(paste("say",text))
title = "test"
system(paste("osascript -e 'display notification ",text," with title ", title))
system(paste("osascript -e display notification",text," with title ", title))
system(paste("osascript -e display notification",text))
system(paste("say",text))
def notify(title, text):
system("osascript -e 'beep 5'")
system(paste("osascript -e 'display notification text'"))
notification = paste(display notification text)
notification = paste("display notification", text)
system(paste("osascript -e ", notification))
notification = paste("'display notification", text, "'")
notification
system(paste("osascript -e ", notification))
paste("osascript -e ", notification)
notification = paste(""" 'display notification """,text, """ '""")
notification = paste(" 'display notification" , text, "'")
notification
title = ""test""
title = " \"test"\"
def notify(title, text):
system("osascript -e 'beep 5'")
system(paste("say",text))
notification = paste(" 'display notification ", text,"'")
system(paste("osascript -e ", notification))
title = " \"test"\"
def notify(title, text):
system("osascript -e 'beep 5'")
system(paste("say",text))
notification = paste(" 'display notification ", text,"'")
system(paste("osascript -e ", notification))
paste("say",text)
system("osascript -e 'display notification your Code is done'")
system("osascript -e 'display notification your Code is done'")
system(paste("osascript -e 'display notification your Code is done'"))
system(paste("osascript -e 'display notification test'"))
system(paste("osascript -e ", 'display notification test'"))
system(paste("osascript -e ", "'display notification test'"))
system(paste("osascript -e ", "'display notification test'"))
system(paste("osascript -e 'display notification text'"))
system(paste("osascript -e 'display notification You Code is Done'"))
system(paste("osascript -e 'display notification 'You Code is Done''"))
"osascript -e 'display notification 'You Code is Done' '"
system(paste('osascript -e "display notification "Your Code is Done" "'))
paste('osascript -e "display notification "Your Code is Done" "')
system(paste("""osascript -e 'display notification Your Code is Done ' """))
system(paste("osascript -e 'display notification Your\ Code\ is\ Done ' "))
system(paste("osascript -e 'display notification Your_Code_is_Done ' "))
system(paste("osascript -e 'display notification test' "))
system(paste("osascript -e 'display notification text'"))
system(paste("osascript -e 'display notification test'"))
system(paste("osascript -e 'display notification text'"))
system(paste("osascript -e 'display notification notification'"))
system(paste("osascript -e 'display notification text'"))
notify <-function(){
system("osascript -e 'beep 5'")
system("say your code is done")
system(paste("osascript -e 'display notification text'"))
}
notify()
notify <-function(){
system("osascript -e 'beep 5'")
system("say your code is done")
system(paste("osascript -e 'display notification text'"))
}
notify()
dnorm(.3)
pnorm(.3)
pnorm(.5)
pnorm(0)
dnorm(0)
pnorm(.3)
(265 - 250)/(50/10)
pnorm(3)
1- pnorm(3)
dnorm(.9)
?rnorm
qnorm(.9)
qnorm(.95)
qnorm(.9725)
qnorm(.975)
qnorm(.95)
?qt
qt(.95, 63)
1750 + (qt(.95, 63) * (120/sqrt(64)))
1750 - (qt(.95, 63) * (120/sqrt(64)))
(120/sqrt(64))
qt(.95, 63) * (120/sqrt(64))
sqrt(64)
120/sqrt(64)
1700 - 1750 / (120/sqrt(64))
(1700 - 1750) / (120/sqrt(64))
(1750- 1700) / (120/sqrt(64))
1-pt(3.33333, 63)
n =225
went = 90
went / n
p = went / n
qnorm(.975)
1 - .99
(1 - .99)/2
qt(.995)
source('~/.active-rstudio-document', echo=TRUE)
qt(.995, 224)
qnorm(.995)
p + 2.575829 * (sqrt(p(1-p)/n))
p = went / n
p + 2.575829 * (sqrt(p(1-p)/n))
p + 2.575829 * (sqrt(p*(1-p)/n))
p - 2.575829 * (sqrt(p*(1-p)/n))
((1.96**2)*(.5**2))/.03
((1.96**2)*(.5**2))/.03**2
pt(2.16, df = 5)
pt(-1.7, df = 24, lower.tail = F)
pt(4, df = 35, lower.tail = F)
x = rnorm(100)
y =  2 + 3x
y =  2 + 3*x
plot(y~x)
x = 1:100
y =  2 + 3*x + rnorm(100)
x = 1:100
y =  2 + 3*x + rnorm(100)
plot(y~x)
y =  2 + 3*x + 2*rnorm(100)
plot(y~x)
y =  2 + 3*x + 100*rnorm(100)
plot(y~x)
lmod <- lm(y~x)
summary(lmod)
se = sqrt(259320/99)
testStat = 4.7 / se
testStat
pt(testStat,99)
(testStat = 4.7 / (se/ sqrt(900)))
pt(testStat,99)
se/sqrt(900)
sqrt(900)
se/sqrt(900)
4.7 / (se/sqrt(900)))
4.7 / (se/sqrt(900))
2*pt(testStat,99, lower.tail = F)
(testStat = 4.7 / (se/sqrt(900)) )
2*pt(testStat,99, lower.tail = F)
(se/sqrt(900))
qt(95,99)
qt(.95,99)
qt(.05,99)
4.7 + qt(.95,99) * 1.706
4.7 - qt(.05,99) * 1.706
4.7 - qt(.95,99) * 1.706
4.7 + qt(.05,99) * 1.706
4.7 - qt(.05,99) * 1.706
4.7 + qt(.05,99) * 1.706
qt(.05,99)
qt(.05,99)
x = rnorm(100)
y = 3*x + 100*rnorm(100)
plot(y~x)
y = 3*x + rnorm(100)
plot(y~x)
y = 2 +3*x + rnorm(100)
plot(y~x)
lmod <- lm(y~x)
summary(lmod)
9610/3313
pt(2.900694, 104)
pt(2.900694, 104, lower.tail = F)
2*pt(2.900694, 104, lower.tail = F)
2*pt(2.900694, 100, lower.tail = F)
library(ggplot2)
n = 10000
count = 0
sumnumbers <- numeric(n+1)
converge <- numeric(n)
for(i in seq(n)){
x <- runif(1)
y <- runif(1)
sumnumbers[i+1] = sumnumbers[i] + (y <= x)
converge[i] = sumnumbers[i+1] / n
}
num <- 1:n
final <- data.frame(cbind(num, converge))
ggplot(final, aes(y = converge,x =num))+
geom_line()
library(faraway)
install.packages(faraway)
?data
library(farrway)
install.packages("faraway")
library(faraway)
data(teengamb)
head(teengamb)
lmod<- lm(gamble ~.,data = teengamb)
lmodR <- lm(gamble ~ . - income, data = teengamb)
summary(lmod)
summary(lmodR)
anova(lmod, lmodR)
4.839**2
coef(lmod)
test <- summary(lmod)
names(test)
test <- summary(lmod)$coefficients
test
summary(lmod)$coefficients
summary(lmodR)$coefficients
names(anova(lmod, lmodR))
anova(lmod, lmodR)$F
4.8391032**2
anova(lmod, lmodR)
library(faraway)
data(teengamb)
head(teengamb)
lmod<- lm(gamble ~.,data = teengamb)
lmodR <- lm(gamble ~ . - income, data = teengamb)
summary(lmod)$coefficients
summary(lmodR)$coefficients
anova(lmod, lmodR)$F
4.8391032**2
anova(lmod, lmodR)
lm(gamble~1, data = teengamb)
lmod1 <- lm(gamble~1, data = teengamb)
lmod1 <- lm(gamble~income, data = teengamb)
anova(lmodnull, lmod1)
lmodnull <- lm(gamble~1, data = teengamb)
lmod1 <- lm(gamble~income, data = teengamb)
anova(lmodnull, lmod1)
summary(lmodnull)
summary(lmod1)
5.330**2
anova(lmodnull, lmod1)
tq(6.6674, 107)
tp(6.6674, 107)
pt(6.6674, 107)
pt(6.6674, 107, lower.tail = F)
2*pt(6.6674, 107, lower.tail = F)
2*pt(1.781, 107, lower.tail = F)
2*pt(1.33228, 107, lower.tail = F)
2*pt(3.5, 107, lower.tail = F)
2*pt(3.230769, 107, lower.tail = F)
2*pt(6.6674, 106, lower.tail = F)
2*pt(1.781, 106, lower.tail = F)
2*pt(1.33228, 106, lower.tail = F)
2*pt(3.5, 106, lower.tail = F)
2*pt(3.230769, 106, lower.tail = F)
2*pt(6.6674, 102, lower.tail = F)
2*pt(1.781, 102, lower.tail = F)
2*pt(1.33228, 102, lower.tail = F)
2*pt(3.5, 102, lower.tail = F)
2*pt(3.230769, 102, lower.tail = F)
qt(.9, 98)
qt(.95, 98)
?VIF
?vif
??vif
?vif
?Vif
??VIF
?vif
?faraway::vif
pf(1.199, 64,64)
pf(22.6202, 3,28)
pf(22.6202, 3,28, lower.tail = F)
pf(22.79, 3,28, lower.tail = F)
pchisq(44.77, 4)
pchisq(44.77, 4, lower.tail = F)
pchisq(45.09, 4, lower.tail = F)
1-pchisq(45.09, 4)
library(tidyverse)
rawData <- read_csv("/Users/michaelzabawa/Downloads/Blue12-TIPS.xlsx")
?xlsx
??xlsx
?read_xlsx
rawData <- read_xlsx("/Users/michaelzabawa/Downloads/Blue12-TIPS.xlsx")
rawData <- readxl::read_xlsx("/Users/michaelzabawa/Downloads/Blue12-TIPS.xlsx")
head(rawData)
?sample
pchisq(10.7458, df = 1, lower.tail = FALSE)
pchisq(14.4859, df = 2, lower.tail = FALSE)
country = "AU"
if(country = "CA"){
temp = 1
}
if(country == "CA"){
temp = 1
}
install.packages('forecast',dependencies=T)
install.packages('tseries')
install.packages(c('expsmooth','lmtest','zoo'))
library(haven)
library(fma)
library(tseries)
library(expsmooth)
library(lmtest)
library(zoo)
install.packages('fma')
library(haven)
library(fma)
library(tseries)
library(expsmooth)
library(lmtest)
library(zoo)
dir()
setwd(~./Documents)
setwd("~./Documents")
setwd("~\.Documents")
setwd("~\Documents")
setwd("~/Documents")
dir()
setwd("~/Fall 1 Team Homework 5")
setwd("~/Fall\ 1\ Team\ Homework\ 5")
setwd("/Users/michaelzabawa/Documents/Fall\ 1\ Team\ Homework\ 5/Time\ Series1/Class\ Data")
dir()
data = read_sas("usairlines.sas7bdat")
data
Passenger <- ts(data$Passengers, start  = 1990, frequency = 12)
decomp_stl <- stl(Passenger,  s.window = 7)
plot(decomp_stl)
decomp_stl <- stl(Passenger,  s.window = 6)
plot(decomp_stl)
decomp_stl <- stl(Passenger,  s.window = 10)
plot(decomp_stl)
dir()
setwd('/Users/michaelzabawa/Documents/Fall\ 1\ Team\ Homework\ 5/Logistic\ Regression\ 1/Homework1_LR')
dir(0)
dir()
library('haven')
dataTrain <- read_sas('insurance_t.sas7bdat')
dataTrain
summary(dataTrain)
head(dataTrain$BRANCH, n = 20)
dataTrain$BRANCH <- as.factor(dataTrain$BRANCH)
head(dataTrain$RES, n = 20)
dataTrain$RES <- as.factor(dataTrain$RES)
summary(dataTrain)
